# -----------------------------------------------------------------
# ARQUIVO RENDER.YAML CORRIGIDO (type: psql -> postgres)
# -----------------------------------------------------------------

services:
  # 1. Banco de Dados PostgreSQL
  - type: postgres # <-- CORRIGIDO
    name: postgres
    plan: starter

  # 2. Redis
  - type: redis
    name: redis
    plan: starter

  # 3. Serviço Web Principal (Chatwoot Rails)
  - type: web
    name: rails
    plan: starter
    image:
      url: ghcr.io/fazer-ai/chatwoot:v4.4.0-fazer-ai.13
    startCommand: "bundle exec rails s -p 3000 -b 0.0.0.0"
    healthCheck:
      path: /
    envVars:
      - key: RAILS_ENV
        value: production
      - key: INSTALLATION_ENV
        value: render
      - key: DEFAULT_LOCALE
        value: pt_BR
      - key: POSTGRES_HOST
        fromService:
          type: postgres
          name: postgres
          property: host
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: url
      - key: BAILEYS_PROVIDER_DEFAULT_URL
        fromService:
          type: web
          name: baileys-api
          property: url
      # --- VARIÁVEIS QUE VOCÊ PRECISA CRIAR NO PAINEL DO RENDER ---
      - key: FRONTEND_URL
        sync: false
      - key: POSTGRES_USER
        fromService:
          type: postgres
          name: postgres
          property: user
      - key: POSTGRES_PASSWORD
        fromService:
          type: postgres
          name: postgres
          property: password
      - key: POSTGRES_DATABASE
        fromService:
          type: postgres
          name: postgres
          property: database
      - key: SECRET_KEY_BASE
        sync: false
      - key: BAILEYS_PROVIDER_DEFAULT_API_KEY
        sync: false
      - key: MAILER_SENDER_EMAIL
        sync: false
      - key: RESEND_API_KEY
        sync: false
      # -- Branding --
      - key: INSTALLATION_NAME
        value: Altma Industrial
      - key: BRAND_NAME
        value: Altma Industrial
      - key: LOGO
        value: https://raw.githubusercontent.com/kelson-cosme/icons/main/logo.png
      - key: LOGO_DARK
        value: https://raw.githubusercontent.com/kelson-cosme/icons/main/logo_dark.png
      - key: LOGO_THUMBNAIL
        value: https://raw.githubusercontent.com/kelson-cosme/icons/main/sidebar_logo.png
      - key: FAVICON_URL
        value: https://raw.githubusercontent.com/kelson-cosme/icons/main/favicon.ico
      - key: BRAND_URL
        value: https://kelson-cosme.vercel.app
    disks:
      - name: storage
        mountPath: /app/storage
        sizeGB: 10

  # 4. Worker do Sidekiq
  - type: worker
    name: sidekiq
    plan: starter
    image:
      url: ghcr.io/fazer-ai/chatwoot:latest
    startCommand: "bundle exec sidekiq -C config/sidekiq.yml"
    envVars:
      - fromGroup: rails
    disks:
      - name: storage
        mountPath: /app/storage

  # 5. Baileys API
  - type: web
    name: baileys-api
    plan: starter
    image:
      url: ghcr.io/fazer-ai/baileys-api:latest
    startCommand: "bun manage-api-keys create user $BAILEYS_PROVIDER_DEFAULT_API_KEY && bun start"
    healthCheck:
      path: /status
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: url
      - key: BAILEYS_PROVIDER_DEFAULT_API_KEY
        sync: false

  # 6. N8N
  - type: web
    name: n8n
    plan: starter
    image:
      url: docker.n8n.io/n8nio/n8n:latest
    startCommand: n8n
    healthCheck:
      path: /
    envVars:
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_HOST
        fromService:
          type: postgres
          name: postgres
          property: host
      - key: DB_POSTGRESDB_USER
        fromService:
          type: postgres
          name: postgres
          property: user
      - key: DB_POSTGRESDB_PASSWORD
        fromService:
          type: postgres
          name: postgres
          property: password
      - key: DB_POSTGRESDB_DATABASE
        value: n8n
      # --- VARIÁVEIS QUE VOCÊ PRECISA CRIAR NO PAINEL DO RENDER ---
      - key: N8N_EDITOR_BASE_URL
        sync: false
      - key: WEBHOOK_URL
        sync: false
      - key: GENERIC_TIMEZONE
        sync: false
    disks:
      - name: n8n-data
        mountPath: /home/node/.n8n
        sizeGB: 5