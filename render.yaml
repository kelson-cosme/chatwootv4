# Corrected render.yaml using the standard 'psql' type for PostgreSQL

services:
  # 1. PostgreSQL Database using the standard 'psql' type
  - type: psql
    name: postgres
    plan: starter

  # 2. Redis
  - type: redis
    name: redis
    plan: starter

  # 3. Chatwoot Rails Web Service
  - type: web
    name: rails
    plan: starter
    image:
      url: ghcr.io/fazer-ai/chatwoot:v4.4.0-fazer-ai.13
    startCommand: "bundle exec rails s -p 3000 -b 0.0.0.0"
    healthCheck:
      path: /
    envVars:
      # --- References to other services, corrected to use 'psql' ---
      - key: POSTGRES_HOST
        fromService:
          type: psql # Corrected
          name: postgres
          property: host
      - key: POSTGRES_USER
        fromService:
          type: psql # Corrected
          name: postgres
          property: user
      - key: POSTGRES_PASSWORD
        fromService:
          type: psql # Corrected
          name: postgres
          property: password
      - key: POSTGRES_DATABASE
        fromService:
          type: psql # Corrected
          name: postgres
          property: database
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: url
      # --- Other environment variables ---
      - key: RAILS_ENV
        value: production
      # --- Variables to be set in the Render Dashboard ---
      - key: SECRET_KEY_BASE
        sync: false
      - key: FRONTEND_URL
        sync: false

  # 4. Sidekiq Worker
  - type: worker
    name: sidekiq
    plan: starter
    image:
      url: ghcr.io/fazer-ai/chatwoot:latest
    startCommand: "bundle exec sidekiq -C config/sidekiq.yml"
    envVars:
      # It is recommended to create an Environment Group in the Render dashboard
      # and apply it to both the 'rails' and 'sidekiq' services.
      - key: POSTGRES_URL
        fromService:
          type: psql # Corrected
          name: postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: connectionString
      - key: RAILS_ENV
        value: production
      - key: SECRET_KEY_BASE
        sync: false