# services:
#   # --------------------- SERVIÇOS DO CHATWOOT ---------------------
#   rails:
#     image: 'ghcr.io/fazer-ai/chatwoot:v4.4.0-fazer-ai.13'
#     pull_policy: always
#     ports:
#       - "3000:3000"
#     volumes:
#       - 'storage:/app/storage'
#     depends_on:
#       postgres:
#         condition: service_healthy
#     # A secção 'command' abaixo é a correta para iniciar o servidor
#     entrypoint: docker/entrypoints/rails.sh
#     command:
#       - bundle
#       - exec
#       - rails
#       - s
#       - '-p'
#       - '3000'
#       - '-b'
#       - 0.0.0.0
#     environment:
#       - NODE_ENV=production
#       - RAILS_ENV=production
#       - INSTALLATION_ENV=docker
#       - DEFAULT_LOCALE=pt_BR
#       - 'FRONTEND_URL=${FRONTEND_URL}'
#       - 'INTERNAL_HOST_URL=http://rails:3000'
#       - POSTGRES_HOST=postgres
#       - POSTGRES_PORT=5432
#       - 'POSTGRES_USERNAME=${SERVICE_USER_POSTGRES}'
#       - 'POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}'
#       - 'POSTGRES_DATABASE=${POSTGRES_DB_CHATWOOT:-chatwoot_production}'
#       - 'SECRET_KEY_BASE=${SERVICE_PASSWORD_64_SECRETKEYBASE}'
#       - 'REDIS_URL=redis://redis:6379'
#       - 'REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS}'
#       - 'BAILEYS_PROVIDER_DEFAULT_CLIENT_NAME=${BAILEYS_PROVIDER_DEFAULT_CLIENT_NAME:-Chatwoot}'
#       - 'BAILEYS_PROVIDER_DEFAULT_URL=http://baileys-api:3025'
#       - 'BAILEYS_PROVIDER_DEFAULT_API_KEY=${SERVICE_PASSWORD_64_DEFAULTAPIKEY}'
#       - BAILEYS_PROVIDER_USE_INTERNAL_HOST_URL=true
#       - 'MAILER_SENDER_EMAIL=${MAILER_SENDER_EMAIL}'
#       - 'RESEND_API_KEY=${RESEND_API_KEY}'
#       # - 'BRAND_ASSETS_URL=${BRAND_ASSETS_URL}'

#       - INSTALLATION_NAME=Altma Industrial
#       - BRAND_NAME=Altma Industrial
#       - LOGO=https://raw.githubusercontent.com/kelson-cosme/icons/main/logo.png
#       - LOGO_DARK=https://raw.githubusercontent.com/kelson-cosme/icons/main/logo_dark.png
#       - LOGO_THUMBNAIL=https://raw.githubusercontent.com/kelson-cosme/icons/main/sidebar_logo.png
#       - FAVICON_URL=https://raw.githubusercontent.com/kelson-cosme/icons/main/favicon.ico
#       - BRAND_URL=https://kelson-cosme.vercel.app
#       - WIDGET_BRAND_URL=https://kelson-cosme.vercel.app
#       - TERMS_URL=https://kelson-cosme.vercel.app
#       - PRIVACY_URL=https://kelson-cosme.vercel.app

#     restart: always
#     healthcheck:
#       test:
#         - CMD-SHELL
#         - 'wget -qO- --header="Accept: text/html" http://127.0.0.1:3000/'
#       interval: 60s
#       timeout: 20s
#       retries: 10
#   sidekiq:
#     image: 'ghcr.io/fazer-ai/chatwoot:latest'
#     pull_policy: always
#     volumes:
#       - 'storage:/app/storage'
#     depends_on:
#       postgres:
#         condition: service_healthy
#       redis:
#         condition: service_healthy
#     environment:
#       - NODE_ENV=production
#       - RAILS_ENV=production
#       - INSTALLATION_ENV=docker
#       - DEFAULT_LOCALE=pt_BR
#       - 'FRONTEND_URL=${FRONTEND_URL}'
#       - 'INTERNAL_HOST_URL=http://rails:3000'
#       - POSTGRES_HOST=postgres
#       - POSTGRES_PORT=5432
#       - 'POSTGRES_USERNAME=${SERVICE_USER_POSTGRES}'
#       - 'POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}'
#       - 'POSTGRES_DATABASE=${POSTGRES_DB_CHATWOOT:-chatwoot_production}'
#       - 'SECRET_KEY_BASE=${SERVICE_PASSWORD_64_SECRETKEYBASE}'
#       - 'REDIS_URL=redis://redis:6379'
#       - 'REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS}'
#       - 'BAILEYS_PROVIDER_DEFAULT_CLIENT_NAME=${BAILEYS_PROVIDER_DEFAULT_CLIENT_NAME:-Chatwoot}'
#       - 'BAILEYS_PROVIDER_DEFAULT_URL=http://baileys-api:3025'
#       - 'BAILEYS_PROVIDER_DEFAULT_API_KEY=${SERVICE_PASSWORD_64_DEFAULTAPIKEY}'
#       - BAILEYS_PROVIDER_USE_INTERNAL_HOST_URL=true
#       - 'MAILER_SENDER_EMAIL=${MAILER_SENDER_EMAIL}'
#       - 'RESEND_API_KEY=${RESEND_API_KEY}'

        
#     command:
#       - bundle
#       - exec
#       - sidekiq
#       - '-C'
#       - config/sidekiq.yml
#     restart: always
#     healthcheck:
#       test:
#         - CMD-SHELL
#         - 'ps aux | grep [s]idekiq'
#       interval: 20s
#       timeout: 20s
#       retries: 10
#   baileys-api:
#     image: 'ghcr.io/fazer-ai/baileys-api:latest'
#     pull_policy: always
#     volumes:
#       - 'storage:/app/storage'
#     depends_on:
#       redis:
#         condition: service_healthy
#     environment:
#       - NODE_ENV=production
#       - 'REDIS_URL=redis://redis:6379'
#       - 'REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS}'
#       - 'LOG_LEVEL=${LOG_LEVEL:-debug}'
#       - 'BAILEYS_LOG_LEVEL=${BAILEYS_LOG_LEVEL:-error}'
#       - 'BAILEYS_PROVIDER_DEFAULT_API_KEY=${SERVICE_PASSWORD_64_DEFAULTAPIKEY}'

#       - INSTALLATION_NAME=Altma Industrial
#       - BRAND_NAME=Altma Industrial
#       - LOGO=https://raw.githubusercontent.com/kelson-cosme/icons/main/logo.png
#       - LOGO_DARK=https://raw.githubusercontent.com/kelson-cosme/icons/main/logo_dark.png
#       - LOGO_THUMBNAIL=https://raw.githubusercontent.com/kelson-cosme/icons/main/sidebar_logo.png
#       - FAVICON_URL=https://raw.githubusercontent.com/kelson-cosme/icons/main/favicon.ico
#       - BRAND_URL=https://kelson-cosme.vercel.app
#       - WIDGET_BRAND_URL=https://kelson-cosme.vercel.app
#       - TERMS_URL=https://kelson-cosme.vercel.app
#       - PRIVACY_URL=https://kelson-cosme.vercel.app
#     command:
#       - sh
#       - '-c'
#       - 'bun manage-api-keys create user ${SERVICE_PASSWORD_64_DEFAULTAPIKEY} && bun start'
#     restart: always
#     healthcheck:
#       test:
#         - CMD-SHELL
#         - 'wget -qO- http://localhost:3025/status'
#       interval: 20s
#       timeout: 20s
#       retries: 10

#   # --------------------- SERVIÇOS PARTILHADOS ---------------------
#   postgres:
#     image: 'ghcr.io/fazer-ai/postgres-16-pgvector:latest'
#     restart: always
#     volumes:
#       - 'postgres-data:/var/lib/postgresql/data'
#       - './postgres-init:/docker-entrypoint-initdb.d'
#     environment:
#       - POSTGRES_USER=${SERVICE_USER_POSTGRES}
#       - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
#       - POSTGRES_DB=${POSTGRES_DB_CHATWOOT:-chatwoot_production} # DB Padrão
#       - POSTGRES_DB_N8N=${POSTGRES_DB_N8N:-n8n} # Passa o nome da DB do n8n para o script
#     healthcheck:
#       test:
#         - CMD-SHELL
#         - 'pg_isready -h localhost -p 5432 -U $${POSTGRES_USER} -d $${POSTGRES_DB}'
#       interval: 20s
#       timeout: 20s
#       retries: 10
#   redis:
#     image: 'redis:alpine'
#     restart: always
#     command:
#       - sh
#       - '-c'
#       - 'redis-server --requirepass "${SERVICE_PASSWORD_REDIS}"'
#     volumes:
#       - 'redis-data:/data'
#     environment:
#       - 'REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS}'
#     healthcheck:
#       test:
#         - CMD-SHELL
#         - 'redis-cli -h localhost -p 6379 -a $${REDIS_PASSWORD} ping'
#       interval: 20s
#       timeout: 20s
#       retries: 10

#   # --------------------- NOVO SERVIÇO N8N ---------------------
#   n8n:
#     image: 'docker.n8n.io/n8nio/n8n:latest'
#     restart: always
#     ports:
#       - "5678:5678"
#     volumes:
#       - 'n8n-data:/home/node/.n8n'
#     depends_on:
#       postgres:
#         condition: service_healthy
#     environment:
#       - 'N8N_EDITOR_BASE_URL=${N8N_URL}'
#       - 'WEBHOOK_URL=${N8N_URL}'
#       - 'N8N_HOST=n8n'
#       - 'GENERIC_TIMEZONE=${GENERIC_TIMEZONE}'
#       - 'TZ=${GENERIC_TIMEZONE}'
#       - DB_TYPE=postgresdb
#       - DB_POSTGRESDB_DATABASE=${POSTGRES_DB_N8N}
#       - DB_POSTGRESDB_HOST=postgres
#       - DB_POSTGRESDB_PORT=5432
#       - DB_POSTGRESDB_USER=${SERVICE_USER_POSTGRES}
#       - DB_POSTGRESDB_SCHEMA=public
#       - DB_POSTGRESDB_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
#       - NODE_FUNCTION_ALLOW_EXTERNAL=@devlikeapro/n8n-nodes-chatwoot

#     healthcheck:
#       test:
#         - CMD-SHELL
#         - 'wget -qO- http://127.0.0.1:5678/'
#       interval: 5s
#       timeout: 20s
#       retries: 10

# # --------------------- VOLUMES PARA TODOS OS SERVIÇOS ---------------------
# volumes:
#   storage:
#   postgres-data:
#   redis-data:
#   n8n-data:


services:
  chatwoot:
    image: 'ghcr.io/fazer-ai/chatwoot:v4.4.0-fazer-ai.13'
    pull_policy: always
    ports:
      - "3000:3000"
    volumes:
      - 'storage:/app/storage'
    entrypoint: ./entrypoint.sh # Use o novo script de entrypoint
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
      - DEFAULT_LOCALE=pt_BR
      - 'FRONTEND_URL=${FRONTEND_URL}'
      - 'INTERNAL_HOST_URL=http://chatwoot:3000' # Nome do serviço atualizado
      # As variáveis de PostgreSQL e Redis serão injetadas pelo Railway
      - 'SECRET_KEY_BASE=${SERVICE_PASSWORD_64_SECRETKEYBASE}'
      - 'BAILEYS_PROVIDER_DEFAULT_CLIENT_NAME=${BAILEYS_PROVIDER_DEFAULT_CLIENT_NAME:-Chatwoot}'
      - 'BAILEYS_PROVIDER_DEFAULT_URL=http://baileys-api:3025'
      - 'BAILEYS_PROVIDER_DEFAULT_API_KEY=${SERVICE_PASSWORD_64_DEFAULTAPIKEY}'
      - BAILEYS_PROVIDER_USE_INTERNAL_HOST_URL=true
      - 'MAILER_SENDER_EMAIL=${MAILER_SENDER_EMAIL}'
      - 'RESEND_API_KEY=${RESEND_API_KEY}'
      - INSTALLATION_NAME=Altma Industrial
      - BRAND_NAME=Altma Industrial
      - LOGO=https://raw.githubusercontent.com/kelson-cosme/icons/main/logo.png
      - LOGO_DARK=https://raw.githubusercontent.com/kelson-cosme/icons/main/logo_dark.png
      - LOGO_THUMBNAIL=https://raw.githubusercontent.com/kelson-cosme/icons/main/sidebar_logo.png
      - FAVICON_URL=https://raw.githubusercontent.com/kelson-cosme/icons/main/favicon.ico
      - BRAND_URL=https://kelson-cosme.vercel.app
      - WIDGET_BRAND_URL=https://kelson-cosme.vercel.app
      - TERMS_URL=https://kelson-cosme.vercel.app
      - PRIVACY_URL=https://kelson-cosme.vercel.app
    restart: always

  baileys-api:
    image: 'ghcr.io/fazer-ai/baileys-api:latest'
    pull_policy: always
    volumes:
      - 'storage:/app/storage'
    # O Redis será gerenciado pelo Railway
    environment:
      - NODE_ENV=production
      - 'LOG_LEVEL=${LOG_LEVEL:-debug}'
      - 'BAILEYS_LOG_LEVEL=${BAILEYS_LOG_LEVEL:-error}'
      - 'BAILEYS_PROVIDER_DEFAULT_API_KEY=${SERVICE_PASSWORD_64_DEFAULTAPIKEY}'
      - INSTALLATION_NAME=Altma Industrial
      - BRAND_NAME=Altma Industrial
      - LOGO=https://raw.githubusercontent.com/kelson-cosme/icons/main/logo.png
      - LOGO_DARK=https://raw.githubusercontent.com/kelson-cosme/icons/main/logo_dark.png
      - LOGO_THUMBNAIL=https://raw.githubusercontent.com/kelson-cosme/icons/main/sidebar_logo.png
      - FAVICON_URL=https://raw.githubusercontent.com/kelson-cosme/icons/main/favicon.ico
      - BRAND_URL=https://kelson-cosme.vercel.app
      - WIDGET_BRAND_URL=https://kelson-cosme.vercel.app
      - TERMS_URL=https://kelson-cosme.vercel.app
      - PRIVACY_URL=https://kelson-cosme.vercel.app
    command:
      - sh
      - '-c'
      - 'bun manage-api-keys create user ${SERVICE_PASSWORD_64_DEFAULTAPIKEY} && bun start'
    restart: always

  n8n:
    image: 'docker.n8n.io/n8nio/n8n:latest'
    restart: always
    ports:
      - "5678:5678"
    volumes:
      - 'n8n-data:/home/node/.n8n'
    # O PostgreSQL será gerenciado pelo Railway
    environment:
      - 'N8N_EDITOR_BASE_URL=${N8N_URL}'
      - 'WEBHOOK_URL=${N8N_URL}'
      - 'N8N_HOST=n8n'
      - 'GENERIC_TIMEZONE=${GENERIC_TIMEZONE}'
      - 'TZ=${GENERIC_TIMEZONE}'
      - DB_TYPE=postgresdb
      # As variáveis do banco de dados serão injetadas pelo Railway
      - NODE_FUNCTION_ALLOW_EXTERNAL=@devlikeapro/n8n-nodes-chatwoot

volumes:
  storage:
  n8n-data: